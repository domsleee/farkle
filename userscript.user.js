(()=>{"use strict";class t{constructor(){const t=document.createElement("div");t.id="scorecard-column",t.innerHTML="\n            <table id='scorecard'>\n                <tbody>\n                    <tr>\n                        <td>Turn number</td>\n                        <td class='turnNumber'>0</td>\n                    </tr>\n                    <tr>\n                        <td>Win prob.</td>\n                        <td style='position: relative'>\n                            <span class='winChance' style='position: relative; z-index: 3'>50%</span>\n                            <span class='winChanceBar' style='background:lightgreen; position: absolute; left:0; top:0; bottom:0; height:100%; transition: width 400ms ease-in-out; z-index: 2'></span>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>",$("#player-scores div:first").after(t)}setTurnNumber(t){$("td.turnNumber").text(t)}setWinProbability(t){const e=`${(100*t).toFixed(2)}%`;$("span.winChance").text(e),$("span.winChanceBar")[0].style.width=100*t+"%"}}const e=console.log,o="farkleSolver.results";class a{constructor(e,o){const{set_panic_hook:a,FarkleSolverWasm:i,populate_solver:s}=e;a(),this.probBar=new t,this.farkleSolver=new i,this.populate_solver=s,this.dicePositions={},this.turnNumber=0,this.SERVER=o;for(let t of this._getDiceIds())this.dicePositions[t]=""}async run(){for(console.log("w/ record",this._getLocalStorage()),console.time("populate"),await this.populate_solver(`${this.SERVER}/exact.bincode`,this.farkleSolver),console.timeEnd("populate"),console.time("first action"),this.farkleSolver.decide_action_ext(0,6,[0,0]),console.timeEnd("first action");;){if(await this._waitForYourTurn(),null!=this._getStartNewGameButton()){this._recordWinnerAndRefresh();break}await this._doAction(),await this._waitForStationaryDice()}}_getScores=()=>[parseInt($("#bottom-player-total").text()),parseInt($("#top-player-total").text())];async _doAction(){let t=0,o=this._getScores(),a=6;const[i,s]=this.farkleSolver.decide_action_ext(t,a,o);for(this.probBar.setTurnNumber(++this.turnNumber),this.probBar.setWinProbability(i);;){e(`decide_action_ext(held_score: ${t}, dice_left: ${a}, scores: [${o}])...`);const[i,s]=this.farkleSolver.decide_action_ext(t,a,o);if(e(i,`action: ${s}`),this.probBar.setWinProbability(i),"Stay"===s){this._getBankButton().click();break}this._getRollButton().click(),await this._waitForStationaryDice();let[n,r]=this._getDiceInPlay();const l=r.join("").toString();e(`decide_held_dice_ext(held_score: ${t}, roll: ${l}, scores: [${o}])...`);const[c,d,h]=this.farkleSolver.decide_held_dice_ext(t,l,o);if(e(c,`hold: ${h}`),this.probBar.setWinProbability(c),0===d)break;await this._clickDice(h),await this._waitForStationaryDice(),t+=d,a-=h.length,0===a&&(a=6)}}_recordWinnerAndRefresh(){const t=this._getLocalStorage(),e=this._getScores();e[0]>e[1]?t.wins++:t.loss++,localStorage[o]=JSON.stringify(t),console.log(t),this._getStartNewGameButton().click()}_getLocalStorage(){try{return JSON.parse(localStorage[o])}catch{return{wins:0,loss:0}}}async _clickDice(t){let[e]=this._getDiceInPlay(),o=[],a=0;for(let i of e)a<t.length&&i.alt===t[a]&&(o.push(i),a+=1);for(let t of o)t.click(),await s(350)}_getHeldScore=()=>parseInt($("#bottom-player-round-score b").text());_getDiceInPlay=()=>{const t=Array.from($(".dice")).map((t=>t)).filter((t=>!t.alt.includes("saved"))).sort(((t,e)=>parseInt(t.alt)-parseInt(e.alt))),e=t.map((t=>parseInt(t.alt)));return[t,e]};_getRollButton=()=>$("#throw-button button")[0];_getBankButton=()=>$("#bank-button button")[0];_getStartNewGameButton=()=>$("#result-box[style='display: block;'] button#start-new-game").toArray().at(0);async _waitForYourTurn(){for(;this._getRollButton().disabled&&this._getBankButton().disabled&&null==this._getStartNewGameButton();)await s(100)}async _waitForStationaryDice(){for(;;){await s(100);let t=!1;for(let e of this._getDiceIds()){const o=$(`#${e}`)[0].getAttribute("style");o!==this.dicePositions[e]&&(t=!0),this.dicePositions[e]=o}if(!t)break}}_getDiceIds(){return[1,2,3,4,5,6].map((t=>`d${t}`))}_getText(){return $("#messageBox").text()}}const i=console.log;function s(t){return new Promise((e=>setTimeout(e,t)))}(new class{async run(){await async function(){let t=0;for(!function(t){const e=document.createElement("script");e.type="text/javascript",e.src="https://github.com/domsleee/farkle/raw/gh-pages/farkle_wasm.js",document.body.appendChild(e)}();"undefined"==typeof wasm_bindgen;)t+=1,5===t&&i(`warning: failed to load wasm_bindgen after ${t} attempts`),await s(200);i(`Loaded after ${t} attempt/s`)}(),await wasm_bindgen("https://github.com/domsleee/farkle/raw/gh-pages/farkle_wasm_bg.wasm"),new a(wasm_bindgen,"https://github.com/domsleee/farkle/raw/gh-pages").run()}}).run()})();